{"version":3,"sources":["constants.js","utils.js","Header.jsx","SolutionContext.jsx","SolutionRow.jsx","SolutionArea.jsx","TileArea.jsx","ActionButtons.jsx","CongratsModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["emojiMapping","FEEDBACK_TYPE","NONE","CORRECT","INCORRECT","SOLUTIONS","processSolution","solutionRow","processedSolution","words","trim","split","i","length","push","toLowerCase","closeModal","modalId","document","getElementById","style","display","openModal","checkTime","Header","_ref","yesterdaySolution","React","createElement","Fragment","className","onClick","id","class","map","key","toString","letter","index","href","window","open","SolutionContext","createContext","feedbackMessages","SolutionRow","round","_useContext","useContext","currentRound","currentWord","userSolution","showFeedback","isFeedbackVisible","isCurrentRound","slots","wordToShow","padEnd","concat","shouldShowFeedback","undefined","SolutionArea","solution","solutionArray","isUpperCase","char","toUpperCase","TileArea","tileOrder","onClickTile","actionsDisabled","tiles","onMouseDown","onTouchStart","j","ActionButtons","shuffle","setTileOrder","setCurrentWord","currentLevelHints","setCurrentLevelHints","clear","goBack","totalHintsUsed","setTotalHintsUsed","puzzleIndex","_useState","useState","_useState2","_slicedToArray","hintClicked","setHintClicked","shouldDisable","disabled","newWord","slice","localStorage","setItem","newOrder","v","forEach","indexOf","showNextLetter","setTimeout","CongratsModal","shareClicked","setShareClicked","timeShareText","getItem","textToShare","querySelector","remove","role","console","log","navigator","share","text","clipboard","writeText","App","Math","floor","Date","now","useMemo","haveSavedData","Number","currentSolution","filter","n","storedHints","prevTime","startTime","min","_useState3","_useState4","_useState5","_useState6","setCurrentRound","_useState7","_useState8","setUserSolution","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","setIsFeedbackVisible","_useState15","_useState16","setShowFeedback","_useState17","_useState18","setActionsDisabled","join","useEffect","startTimeCounter","diff","m","s","timeTilNext","mNext","hNext","sNext","innerHTML","findNewLetter","useCallback","oldLetters","sort","newLetters","_","hintWord","arguments","lastLetter","ev","target","innerText","_toConsumableArray","parentNode","children","prev","random","flat","includes","onKeyDown","e","repeat","click","addEventListener","removeEventListener","tileToFlip","newLetter","firstChild","classList","add","totalMinutes","h","Provider","value","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e180119.chunk.js","sourcesContent":["export const emojiMapping = [\n  '🦉',\n  '🦒',\n  '🐬',\n  '🦜',\n  '🐙',\n  '🐐',\n]\n\nexport const FEEDBACK_TYPE = {\n  NONE: 'none',\n  CORRECT: 'correct',\n  INCORRECT: 'incorrect',\n};\n\nexport const SOLUTIONS = `SITE TIES TIERS RITES TIRES TRIES SISTER RESIST RELISTS SLITHERS SHIRTLESS\nSING SIGN GINS PINGS SPYING SPRINGY SPRAYING SPARINGLY\nREAD DEAR DARE AIRED RAIDER MARRIED ADMIRER DREAMIER REMAINDER\nSUED USED DUES DUNES NUDES UNDIES INSURED SUNDRIES SIDEBURNS BURNSIDES\nGETS GEST GENTS INGEST SIGNET TINGES SEATING TEASING SEDATING STEADING DESIGNATE\nRECS CREST CORSET ESCORT SECTOR SCOOTER OUTSCORE COURTEOUS OUTSOURCE\nTORE ROTE RETRO PORTER REPORT PRORATE PRAETOR OPERATOR CORPORATE\nSEED DEES SPEED DEEPS ESPIED PRESIDE PERISHED WHISPERED\nNORI IRON NOIR INTRO NITRO RATION ORATING RIGATONI MIGRATION\nREPS SPREE PEERS PESTER PRESET PETERS STEEPER PRETEENS PRETENSE REPRESENT PRESENTER REPENTERS\nPICS CLIPS SPLICE PICKLES PRICKLES CLERKSHIP\nIONS COINS ICONS SCION SONIC COUSIN SUCTION MISCOUNT COSTUMING\nODDS DOSED DODGES GODDESS GODSENDS DODGINESS\nDIVE VIED IVIED DIVIDE DIVINED DIVIDEND UNDIVIDED\nGRIN RING GRAIN MARGIN ARMING ROAMING ORGANISM IGNORAMUS\nTRUE TUNER NATURE CENTAUR UNCRATE UNTRACED UNDERACT UNCRATED UNCHARTED\nGNAT TANG GRANT GRATIN RATING TARING RATTING RATTLING PRATTLING\nREIN INERT INTER ORIENT PROTEIN POINTER ERUPTION IMPORTUNE\nRARE REAR RACER CAREER TERRACE CATERER RETRACE RECREATE RACKETEER\nSANE SEDAN DEANS ASCEND DANCES CANDIES DISTANCE SYNDICATE\nLINE LIEN ALIEN FINALE INFLATE FILAMENT MINTLEAF FULMINATE\nCART ACTOR CAPTOR CARTOP APRICOT TROPICAL PICTORIAL\nBRAS BARS BRATS BAREST BASTER BREAST BARTERS ARBITERS BARRISTER\nSITS STIRS STAIRS SITARS STRAINS ARSONIST ASSERTION SENORITAS\nREIN REIGN RINGED DINGER GRINNED RENDING ENDURING UNDERSIGN SUNDERING\nCASE ACES SCALE LACES CASTLE CLEATS ELASTIC LACIEST CASTILE CITADELS DIALECTS DISLOCATE\nSERF REFS REEFS FREES REFERS FERRETS REFOREST FORESTER DEFROSTER\nTHIN HINT NIGHT THING HATING HALTING LATHING LATCHING HATCHLING\nTORE ROTE ORATE OATER ORNATE ATONER SENATOR TREASON ATONERS RESONATE STONEWARE\nDATE ACTED CADET CARTED CRATED REDACT TRACED REDCOAT CORDATE DEMOCRAT MOTORCADE\nSEXT TEXTS SEXTET EXTENTS EXISTENT SIXTEENTH\nSTIR TRIOS RIOTS TORSI ROTIS SUITOR TOURIST OUTSTRIP PRINTOUTS OUTSPRINT\nSEED DEES EASED SEATED TEASED SEDATE IDEATES DEVIATES SEDATIVE ADVERTISE\nCURS CRUS CURDS CRUDS CURSED RECUSED REDUCES RESCUED SECURED SEDUCER CENSURED UNSECURED UNRESCUED\nREVS VEERS VERSE SEVER SERVE SERVER REVERS REVERTS TRAVERSE HARVESTER\nRIPS CRISP SCRIP CAPRIS SPACIER REPLICAS SPIRACLE CALIPERS PARTICLES\nBEST BETS BENTS ABSENT BANTERS BARONETS ABSORBENT\nDRIP PRIDE PRIED PRICED PIERCED PEDICURE PREJUDICE\nTOES PESTO POETS ESTOP PRESTO POSTER TROPES REPOTS REPOST RESPOT REPORTS PRESORT PORTERS TROUPERS SUPPORTER\nCRAG CARGO GARCON ORGANIC CAROMING ROMANCING\nEARS SEAR ERAS SERA RAVES AVERS SAVER AVERTS STARVE VASTER BRAVEST VIBRATES VERBALIST\nNARC CAIRN CRANIA ARNICA CARINA OCARINA RAINCOAT CARNATION\nEVES VEES SIEVE REVISE GRIEVES DIVERGES DESERVING\nTIRE RITE TIER RIVET INVERT VINTNER REINVENT INTERVENE\nSETS SECTS CRESTS ACTRESS RECASTS CASTERS SCARCEST SCRATCHES\nHITS THIS HEIST THEIRS HASTIER HARDIEST DISHWATER\nVEAL VALE LAVE LEAVE REVEAL RAVELED SLAVERED ADVERSELY\nTREE ENTER TREEN RELENT LECTERN ELECTRON TOLERANCE COETERNAL\nDEAN ANTED ATTEND TAINTED ATTAINED ANTITRADE ATTAINDER\nCART ACTOR RECOAT COATER EROTICA CREATION REACTION FORNICATE\nACES CASE LACES SCALE CAMELS MESCAL CALMEST CLIMATES METALLICS\nICON COIN TONIC NOTICE CONCEIT CONCERTI NECROTIC ACCRETION\nDONE NODE ENDOW OWNED WOODEN SWOONED HOEDOWNS WOODHENS SNOWSHOED\nSINS SNITS STEINS INSETS SNIDEST DISSENT TIDINESS INSISTED DISSIDENT\nMEAN MANE AMEN NAME MEANT INMATE MINARET RAIMENT EMIGRANT MARKETING\nSINE ANISE ARISEN RAVINES INVADERS VARNISHED\nLACE CLEAR CARTEL CLARET RECTAL TREACLE RELOCATE CORRELATE\nSEAR EARS ERAS SERA REARS RARES ERASER SEARER SERRATE RERATES REARREST ARRESTER TREASURER\nDINE DEIGN DINGE TINGED DIETING EDITING IGNITED DINGIEST DIGESTION\nHOGS GOSH GHOST GOTHS THONGS SHOTGUN GUNSHOT HANGOUTS SHOGUNATE\nAPED ADEPT TAPED DEPART PARTED PRATED PETARD TAPERED RETAPED PREDATE REPEATED DEPARTEE PREHEATED\nSEAS CASES SCALES CLASHES SHACKLES SHELLACKS\nMESS MESAS SEAMS MASSE SESAME MEASLES NAMELESS MALENESS LAMENESS SALESMEN MANELESS MEALINESS\nMUTE UNMET MINUTE MINUET RUNTIME RUDIMENT IMPRUDENT\nREIN INTER INERT TRINE UNITER TRIUNE NUTTIER UTTERING MUTTERING\nSEND DENS NERDS RENDS DRONES SNORED ENDORSE CENSORED ENCODERS CRESCENDO\nACED DACE CASED CADETS REDACTS DETRACTS SCATTERED\nPITA PAINT INAPT PLIANT PLAINT IMPLANT PLATINUM PENULTIMA\nIONS SCION ICONS COINS SONIC COUSIN SUCTION MISCOUNT COLUMNIST\nDIPS DRIPS SPIDER PRIDES PRISED SPIRED DIAPERS PRAISED ASPIRED DESPAIR PARADISE DISPARATE ASPIRATED\nRIDS RIDES SIRED DRIES CIDERS DICERS SCRIED SIDECAR ASCRIBED BIRDCAGES\nLASS SAILS AISLES ABSEILS BASSLINE LESBIANS BRAINLESS\nSUPS PUSS SPURS PURSES SUPERS PERUSES PURENESS UNPRESSED SPEEDRUNS SUSPENDER\nIONS IRONS NOIRS ROSIN GROINS SIGNOR SNORING MORNINGS MONSIGNOR\nREAL EARL LEARN RENAL LINEAR NAILER RETINAL LATRINE RELIANT RELATION ORIENTAL RATIONALE\nSITS SLITS SILTS LISTS ISLETS SLIEST STILES LISTENS ENLISTS SILENTS SALTINES SALIENTS STAINLESS SALTINESS\nSIRE RISE RAISE ARISE PRAISE ASPIRE REPAIRS RASPIER RAPIERS PARRIES PRAIRIES DISREPAIR\nRARE REAR RACER CARER CAREER CATERER TERRACE RECRATE RETRACE RECREANT CARPENTER\nCASH CHAOS NACHOS ANCHORS RANCHOS MONARCHS HARMONICS\nTEND DENT NOTED TONED DOCENT NOTICED DOCTRINE DIRECTION\nSITE TIES HEIST TITHES THEIST ATHEIST HESITATE AESTHETIC\nCUES CLUES ULCERS RECLUSE LECTURES CRUELEST CLUSTERED\nROOT TORO ROTOR TORPOR TROOPER OPERATOR TEARPROOF\nDISS SIDES ISSUED DISUSE SUDSIER DESIROUS DISCOURSE\nSEAS SEARS SNARES REASONS SENORAS PERSONAS TRANSPOSE PATRONESS\nLENS LINES LIENS TINSEL LISTEN SILENT ENLIST INLETS SALIENT ENTAILS SALTINE LITANIES ALIENIST INELASTIC\nTEEN EATEN NEATER ENTREAT RATTEEN TERNATE ANTEATER ALTERNATE\nNICE CINE NIECE ENTICE GENETIC ERECTING GENTRICE CENTERING\nTINT TAINT TITAN INTACT TITANIC CITATION DICTATION\nSETS NESTS STEINS INSETS DISSENT SNIDEST DENTISTS DOTTINESS\nGIST GITS STING TINGS GLINTS LISTING TILINGS SILTING STILTING SLITTING SPLITTING\nACES CASE SCALE LACES CLEATS CASTLE ELASTIC LACIEST LATTICES ATHLETICS\nLACE CLEAR CARTEL CLARET RECTAL TREACLE RELOCATE PERCOLATE\nNINE INNER DINNER GRINNED RENDING ENDURING UNRINGED UNDERLING\nDENT TEND ANTED DETAIN FAINTED DEFIANT INFLATED DEFIANTLY\nHALT LATH LATHE CHALET RELATCH LATCHER TRACHEAL CATHEDRAL\nSNAG SANG NAGS ANGST GNATS TANGS AGENTS MAGNETS GARMENTS STREAMING MASTERING EMIGRANTS\nHERD HEARD HARED ADHERE HEADER HEARTED EARTHED WREATHED WEATHERED\nBELL LABEL BALLER BRAILLE LIBERAL RELIABLY BLEARILY LIBERALLY\nEARS ERAS SEAR SERA ARSE DARES DEARS READS RAISED RESAID SHADIER AIRSHED RADISHES AIRSHEDS HARDINESS\nERRS RISER ROSIER SORRIER ORRERIES RESERVOIR\nRIGS GRINS RINGS SIRING RISING VIRGINS REVISING SHIVERING\nAIDS DAIS SAID STAID TRIADS TIRADES TARDIES ASTRIDE HARDIEST HEADFIRST\nSODA ADOS ROADS DORSA ADORNS RANDOS ONWARDS SANDWORM MARKDOWNS\nEATS EAST SATE TEAS SEAT TASE SAUTE SALUTE AMULETS MULETAS SIMULATE MUTILATES ULTIMATES STIMULATE\nDUNE NUDE UNDER ENDURE ENURED TENURED DENTURE RETUNED DENATURE UNDERATE UNDEREAT UNEARTHED\nSETS RESTS TRESS SISTER RESIST INSERTS SINTERS SINISTER DIRTINESS DISINTERS\nREPS PRESS SPORES POSERS PROSES OPPRESS PROPOSES PORPOISES\nINNS NINES TENNIS INTENSE TENNIES SENTIENT INTESTINE\nSTUD DUST DUETS DUTIES SUITED OUTSIDE TEDIOUS SOLITUDE CLOUDIEST\nGUNS GNUS SUNG SNUG RUNGS GRUNTS STRUNG RUSTING TRUSTING THRUSTING\nSIRS SRIS RISES SIRES SERIES REISSUE SEIZURES SUPERSIZE\nSEAS OASES SEASON REASONS SENORAS BARONESS BROADNESS\nROWS SWORN WORSEN OWNERS RESOWN ROWENS SNOWIER BROWNIES WRISTBONE\nEARN NEAR CRANE NECTAR TRANCE RECANT CANTER CENTRAL CLARINET INTERLACE\nDELI LIED IDLE RILED SLIDER BRIDLES DRIBBLES SCRIBBLED\nSOME POEMS MOPES POMES IMPOSE PROMISE SEMIPRO IMPOSTER MISREPORT IMPORTERS\nHARE HEAR RHEA REACH ACHIER CHIMERA CHAIRMEN MACHINERY\nTREE ENTER TERNE RELENT ETERNAL ENTERAL ANTLERED UNRELATED UNALTERED\nRANT TARN TRAIN RATION ORATION TANDOORI ADORATION\nNARC CRANE CANER NACRE CAREEN RECANE REENACT CRENATE CABERNET CELEBRANT\nNOUN UNWON UNWORN UNSWORN RUNDOWNS SUNDOWNER UNDERSOWN\nEONS ONES NOSE SONE OVENS VENOUS NERVOUS RAVENOUS SUPERNOVA\nLONG LINGO LOGIN DOLING FOLDING FONDLING FOUNDLING UNFOLDING\nEARS ERAS SEAR SERA ARSE REARS RARES RACERS CARERS ARCHERS CRASHER CHARTERS RECHARTS SCRATCHER\nFEUD UNFED FONDUE FOUNDER FLOUNDER WONDERFUL UNDERFLOW\nEASE ERASE HEARSE REHEARS SHEARER RESHARE REPHRASE SHARPENER\nDEER REED CREED RECEDE DECREE ERECTED CENTERED PRECEDENT\nTREE RETIE RETIRE RIVETER OVERTIRE OVERWRITE\nSNAG NAGS SANG GAINS ASSIGN SIGNALS SAPLINGS SPANGLISH SPLASHING\nSASH ASHES SHARES RASHES SHEARS HARNESS RASHNESS HARSHNESS\nGAIN ACING CAKING LACKING CACKLING CLACKING CRACKLING\nPORE ROPE REPO PRONE PERSON REOPENS OPENERS RESPONSE PRESEASON\nTRUE UTTER TURTLE UTTERLY FLUTTERY BUTTERFLY\nSETS NESTS STONES STENOS ONSETS NOSIEST SECTIONS CESSATION CANOEISTS SONICATES\nDINE DEIGN DINGE ENDING GINNED DENTING TENDING UNTINGED INDULGENT\nALTO BLOAT OBLATE NOTABLE BALCONET COUNTABLE\nSEED DEES REEDS SEDER DESERT DETERS RESTED TENDERS NERDIEST RESIDENT INSERTED SINTERED DISSENTER RESIDENTS TIREDNESS\nISLE LEIS LIES RILES SLIER REOILS OILERS ORIELS SPOILER PERILOUS REPULSION\nSEAL SALE ALES LEAS LASE LASER EARLS RALES SERAL PEARLS EARLAPS PARABLES SPARABLE SEPARABLE\nRIGS GRINS RINGS GRAINS SNARING GRANNIES EARNINGS ENGRAINS RANGINESS ANGRINESS\nGERM GRIME GAMIER MIRAGE IMAGER RAGTIME MIGRATE EMIGRATE HERMITAGE\nSIRS SRIS RISES SIRES RINSES SIRENS RESINS SERINS SNIPERS RESPINS RIPENESS PERKINESS\nRICH CHIRP CIPHER CHIPPER CHOPPIER PROPHETIC\nFRET AFTER RAFTED DAFTER FARTED DRAFTEE FEDERATE FEATHERED\nARMS RAMS MARS SMEAR MARES REAMS MASER REALMS REALISM MAILERS MEASLIER MISERABLE\nTRUE ROUTE OUTRE OUTER DETOUR TOURED ROUTED REDOUT READOUT EDUCATOR OUTRACED UNDERCOAT\nRANG GRAN GNAR GRAIN GAINER REGAIN NAGGIER GEARING ENRAGING ANGERING GARDENING GANDERING DERANGING\nSEAS SEARS ARSES SWEARS ANSWERS RAWNESS WARINESS WEARINESS\nODOR DOOR ROOD RODEO MOORED ROOMED DOOMER MOTORED ODOMETER METEOROID\nSURE RUES RUSE USER SUER ROUSE EUROS ROUES COURSE SOURCE CEROUS CROUSE CLOSURE COLURES ULCEROUS URCEOLUS CREDULOUS\nSECT TECS CEST CHEST STECH TECHS STENCH CHASTEN SNATCHED STANCHED UNSCATHED STAUNCHED\nDONE NODE CONED CODEN COINED CODEIN CONFIDE CONFINED CONFIDENT\nRITE TIER TIRE REIT ITER IRATE ARITE TERAI TARIE RETIA RETINA RETAIN RATINE TANIER NATTIER NITRATE INTREAT ITERANT TERTIAN MARTINET TETRAMIN INTERMAT TERMINATE\nCUES ECUS CURSE CURES SUCRE ECRUS CRUSE ULCERS CRUELS LUCRES LURCHES SLOUCHER LECHEROUS\nNERD REND DERN DINER RIDEN RUINED INURED DIURNE UNRIDE INURNED UNFRIEND UNREFINED\nEGOS GOES SEGO OGRES GORES SOGER GORSE GOERS GROUSE ROUGES ROGUES ERUGOS RUGOSE BROGUES BURGEONS SUBREGION\nLAIN NAIL LINA ANIL ALIN ALIGN LIANG LANGI LINGA LIGAN ALGIN LAYING GAINLY ANGRILY RALLYING GLARINGLY\nTERN RENT INERT INTER RETIN NITRE TRINE NITER ENTIRE TRIENE RETINE NEITHER THEREIN ENHERIT ETHERIN THEREMIN INTERMESH THEREMINS\nIONS SION ICONS SCION COINS SONIC OSCIN CIONS COUSIN SUCTION UNSTOIC DISCOUNT CONDUITS NOCTUIDS CUSTODIAN\nSTIR RIST RITES TIERS TIRES TRIES RESIT STERI TRIBES BITERS BESTIR BISTER BISTRE BITTERS TRIBUTES BUTTERIS SUBMITTER\nTOES PESTO POETS STOEP TOPES STOPE ESTOP PRESTO POSTER TROPES REPOTS REPOST RESPOT STOPER TOPERS SPORTED DEPORTS REDTOPS DOORSTEP TORPEDOS DROOPIEST DEPOSITOR\nPODS UPDOS SOUPED PSEUDO SPOUTED OUTSPED OUTSPEND UNPOSTED UNSPOTTED\nHEAR HARE RHEA EARTH HEART HATER RATHE REHEAT HEATER HEREAT AETHER WEATHER WHEREAT WREATHE WREATHED HEADWATER WATERHEAD\nROAN ORNA APRON PATRON TARPON PARTON OPERANT PRONATE PROTEAN COPARENT PORTANCE PROCREANT COPARTNER\nRUNE RUEN TUNER ENRUT URENT NATURE OUTEARN OUTRANGE ENTOURAGE\nROAD ORAD ADORE OARED OREAD ORDEAL RELOAD LOADER LEOTARD DELATOR TAILORED IDOLATER EDITORIAL\nREAR RARE RACER CARER CRARE CAREER CREAMER AMERCER CREAMERY MERCENARY\nTORN TRON NITRO INTRO RATION AROINT RAINOUT CURATION NOCTURIA INCUBATOR\nGNAT TANG GANT GIANT TIANG TANGI HATING ATHING ANIGHT HALTING LATHING THINGAL FANLIGHT NIGHTFALL\nSUED USED DUES DUETS STUDE RUSTED RUDEST DUSTER DERUST DUSTIER STUDIER STUPIDER DISPUTER DISREPUTE REDISPUTE\nSPIT PITS TIPS PIST PITAS TAPIS SPAIT PAINTS PATINS PINTAS PTISAN PANTIES SAPIENT SPINATE PATINES THESPIAN PANTHEIST\nISLE LEIS SILE LIES RILES SLIER RIELS LIERS PLIERS PERILS LISPER SIRPLE SPILER TRIPLES RESPLIT PRIESTLY SPLINTERY\nTEES STEEL SLEET TEELS STELE SLETE TELES LEETS NESTLE RELENTS NESTLER LISTENER RELISTEN SILENTER REENLIST RESILIENT\nTREE REET TEER RETE ENTER RENET TREEN TERNE NETER RENTE ENTREE TEENER RETENE ETERNE RENTEE PRETEEN TERPENE REPENTED REPETEND PRETENDER\nDUNE NUDE UNDE UNDER UNRED RUNED NUDER ENDURE ENURED DURENE TENURED DENTURE RETUNED UNTREED UNDEREAT UNDERATE DENATURE UNTREATED\nSNAG SANG NAGS GAINS ASSIGN CASINGS CAGINESS CARESSING\nRING GRIN GIRN GRAIN GARNI AGRIN RATING GRATIN TARING ORATING RIGATONI RIGATION TAILORING LARGITION GRATIOLIN\nSONS NOSES SONES SENSO LESSON LIONESS INSOLES LESIONS EPSILONS POINTLESS\nSINS SINES NISSE SINEWS WINLESS SWINDLES WILDNESS WINDLESS SNOWSLIDE\nERRS REARS RARES SERRA ERASER REAPERS SPEARER REPHRASE PRESHARE SHARPENER RESHARPEN\nREAR RARE RACER CARER CRARE CRATER TRACER ARRECT RECART CARTER ERRATIC CIRRATE CRITERIA GERIATRIC\nTEES THESE SHEET THREES ETHERS SHELTER HOSTELER HOLSTERED\nRAID ARID AIRED AIDER REDIA IRADE TIRADE TRIAGED GRADIENT TREADING REDATING DERATING DENIGRATE ARGENTIDE GRATINEED DINERGATE\nTREE RETE EATER ARETE CREATE CERATE ECARTE TREACLE BRACELET TRACEABLE\nRITE TIER TIRE ITER IRATE TERAI RETIA SATIRE STRIAE TERAIS REALIST SALTIER RETAILS SALTIRE SLATIER LATRINES ENTRAILS RETINALS RATLINES TRENAILS REINSTALL INSTALLER\nLAGS GALS SLAG SLANG GLANS ALIGNS SIGNAL LIANGS ALGINS LASING LINGAS SCALING LACINGS CASTLING CATLINGS NOSTALGIC\nSEAS ASSE SEARS ARSES RASSE SNARES SARSEN REASONS SENORAS PERSONAS RESPONSA ASPERSION\nACNE CANE ENACT NECTAR TRANCE RECANT CANTER CENTRA CARNET CERTAIN CITREAN NACRITE CREATION REACTION ACTIONER CERATION ANEROTIC MANTICORE CREMATION\nSHIN SINH CHINS CHAINS CASHING CHASING SCATHING SNATCHING STANCHING\nACES CASE SCALE LACES ALECS CASTLE CLEATS ECLATS CALMEST CAMLETS CLIMATES CLEMATIS METICALS ALCHEMIST\nCLAN CLANG GLANCE CANGLE ANGELIC GALENIC ANGLICE CLEANING ENLACING CONGENIAL\nAIRS SARI RAIS RIAS RAISE ARISE SERAI ARMIES RAMIES MAESTRI IMARETS MISRATE STEAMIER EMIRATES TIMESAVER\nROSE ORES ROES SORE SNORE SENOR NOSER SERON GONERS GENROS IGNORES REGIONS SIGNORE RESOLING SOLDERING\nMESS SEAMS MESAS MASSE SHAMES MASHES MESSIAH MASHIES EMPHASIS MISSHAPE MISSHAPEN\nRILE LIRE LIER RIEL LITER LITRE RELIT TILER RETAIL ATELIER TIRALEE LITERATE LATERITE RETALIATE ALITERATE\nLINT GLINT TILING LIFTING FLITING FLITTING FITTINGLY\nSETS NESTS STONES STENOS ONSETS SETONS NOSIEST TENSIONS SENSATION\nSINE SINGE SENGI RESIGN REIGNS SINGER SIGNER RESING LINGERS SLINGER RIESLING RESILING RELIGIONS\nRAIN RANI CAIRN CRAIN ARNICA CRANIA ACINAR NARICA CARINA OCARINA MACARONI MAROCAIN ARMONICA PANORAMIC\nSAND ANDS HANDS DANISH SANDHI SHADING DASHING HEADINGS DEASHING SHEADING ANGUISHED\nIONS NOISE EOSIN SENIOR NOSIER IRONES VERSION REVISION INVERSION\nTEES STEED DEETS SEDATE TEASED SEATED STEAMED MEDIATES DEFEATISM\nDONE NODE NOTED TONED TENDON INTONED ANOINTED ANTINODE NOMINATED DENTINOMA\nFEND FIEND FINED DEFINE INFEED FEINTED INFECTED DEFICIENT\nSUES USES USERS RUSES SUERS SURES NURSES UNDRESS SUNDERS RESOUNDS SOUNDERS DOURNESS ROUNDNESS\nSETS RESTS TRESS STRESS ASSERTS TRASSES TRESPASS SPARSEST STRAPLESS PSALTRESS\nRENT TERN TREND TENDER RENTED DENTER TENURED DENTURE UNTREED RETUNED RETURNED UNDERRATE RENATURED\nBIAS BASIL BAILS BIALYS SYLLABI SIBYLLA SYLLABIC BASICALLY\nTILE LITE TELI TEIL LEGIT GIMLET MELTING LIGAMENT ALIGNMENT LAMENTING\nAPED ADEPT TAPED DEPART PARTED PRATED PETARD PREDATE TAPERED RETAPED REPEATED DEPARTEE DEEPWATER\nVIES VISE VEINS VINES SNIVEL LIVENS UNVEILS EVULSION ENVIOUSLY\nTREE RETE ENTER TREEN TERNE RENTE RELENT ETERNAL TELERAN TENERAL ALTERNE ENTERAL ANTLERED UNRELATED UNALTERED\nSIGN SING GINS DINGS SIDING SHINDIG DISHING DINGHIES SHIELDING\nLEND LADEN ELAND NALED LEADEN LEANED ENABLED DENIABLE BREADLINE\nSIRS SRIS SIRES RISES SERIFS FISSURE FUSSIER SURFEITS SURFIEST FRUITLESS RESISTFUL\nDIRT TIRED TRIED TIERED REEDIT DIETER RETIED DEMERIT MERITED RETIMED MITERED DIMETER REMITTED DETRIMENT\nEARS ERAS SEAR SERA ARSE NEARS EARNS SNARE SANER ARISEN ARSINE ARSENIC ARCSINE CARNIES CANISTER SCANTIER CISTERNA RECASTING\nSOOT BOOST BOOTS OBOIST BONITOS OBTUSION OBTRUSION\nRIDS DRIES RIDES SIRED RESID SLIDER SIDLER IDLERS BRIDLES BRISTLED DRIBLETS BLISTERED\nICES SINCE CINES COSINE OSCINE CONIES CRONIES RECOINS COINERS CORNIEST CORTISONE\nDISS SIDES ISSUED DISUSE GUSSIED DINGUSES GAUDINESS\nPACT PATCH HAPTIC PHATIC HEPATIC APHETIC PASTICHE SCAPHITE PISTACHE WHITECAPS\nONCE CONE COVEN NOVICE INVOICE EVICTION COGNITIVE\nEARN NEAR CRANE CANER NACRE CRENA NECTAR TRANCE RECANT CANTER CENTRA CARNET CENTAUR UNCRATE UNTRACE TRUNCATE UTTERANCE\nRIDS DRIPS PRIDES SPIDER SPIRED DESPAIR DIAPERS ASPIRED PRAISED PARADISE DISAPPEAR APPRAISED\nDICE ICED CEDI CITED EDICT DECEIT ENTICED INCEPTED CENTIPEDE\nICES SINCE CINES NIECES SINCERE SERECIN GENERICS SCREENING SECERNING\nPEER CREEP CREPE PIERCE RECIPE PIECER RECEIPT DECREPIT PREDICATE\nROTE TORE RETRO RETORE ERECTOR RECEPTOR PROCREATE\nNICE CINE MINCE INCOME GENOMIC COMINGLE WELCOMING\nCHAI CHIA CHAIN CHINA ACHING CASHING CHASING SCATHING NIGHTCAPS\nNUTS TUNS STUN STUNT TAUNTS MUTANTS TANTRUMS TRUSTMAN TRANSMUTE\nGIST GITS STING TINGS INGEST TINGES STINGE SIGNET IGNITES NIGHTIES HEISTING HYGIENIST\nSUES USES RUSES USERS SUERS DURESS SUDSER UNDRESS SUNDERS SOUNDERS RESOUNDS DOURNESS UNCROSSED\nOILS SOIL SILO SOLI LOINS LIONS NOILS TONSIL LOTIONS SOLITON LOONIEST OILSTONE NEOLOGIST ENOLOGIST\nDRUG URGED ARGUED GUARDED UNGRADED UNDERGRAD UNDERDRAG\nVANE NAVE VENA RAVEN TAVERN VETERAN RELEVANT LEVANTER PREVALENT\nSEAS ASSE SEARS ARSES RASSE ERASES TEASERS RESEATS TESSERA SEATERS TEARLESS RESLATES STEALERS TESSELAR TASSELER ALERTNESS\nGENE GENRE GREEN REGENT GERENT INTEGER TREEING REGIMENT METERING GERMINATE GERMANITE RETEAMING`\n","export const processSolution = (solutionRow) => {\n  var processedSolution = [\n    [],\n    [],\n    [],\n    [],\n    [],\n    []\n  ];\n  var words = solutionRow.trim().split(\" \");\n  for (var i = 0; i < words.length; i++) {\n    processedSolution[words[i].length - 4].push(words[i].toLowerCase());\n  }\n  return processedSolution;\n}\n\nexport function closeModal(modalId) {\n  document.getElementById(modalId).style.display = \"none\";\n}\n\nexport function openModal(modalId) {\n  document.getElementById(modalId).style.display = \"block\";\n}\n\nexport function checkTime(i) {\n  if (i < 10) {\n    i = \"0\" + i\n  }; // add zero in front of numbers < 10\n  return i;\n}\n\nexport function startTimeCounter(startTime, prevTime, puzzleIndex) {\n  var now = Math.floor(Date.now() / 1000); // get the time now\n  var diff = now - startTime + prevTime; // diff in seconds between now and start\n  localStorage.setItem('currentTime', diff);\n  var m = Math.floor(diff / 60); // get minutes value (quotient of diff)\n  var s = Math.floor(diff % 60); // get seconds value (remainder of diff)\n  m = checkTime(m); // add a leading zero if it's single digit\n  s = checkTime(s); // add a leading zero if it's single digit\n  // document.getElementById(\"timer\").innerHTML = m + \":\" + s; // update the element where the timer will appear\n\n  // DST daylight savings change\n  var nextAnigram = (1661131800000 + ((puzzleIndex + 1) * 1000 * 24 * 60 * 60)) / 1000;\n  var timeTilNext = nextAnigram - now;\n  var mNext = Math.floor(timeTilNext / 60); // get minutes value (quotient of diff)\n  var hNext = Math.floor(mNext / 60);\n  mNext = mNext % 60;\n  var sNext = Math.floor(timeTilNext % 60); // get seconds value (remainder of diff)\n  hNext = checkTime(hNext); // add a leading zero if it's single digit\n  mNext = checkTime(mNext); // add a leading zero if it's single digit\n  sNext = checkTime(sNext); // add a leading zero if it's single digit\n  document.getElementById('nextAnigram').innerHTML = `${hNext}:${mNext}:${sNext}`\n\n  var t = setTimeout(() => startTimeCounter(startTime, prevTime, puzzleIndex), 500); // set a timeout to update the timer\n}\n","import React from 'react';\nimport './Header.css';\nimport './Modals.css';\nimport { emojiMapping } from './constants';\nimport { openModal, closeModal } from './utils';\n\nfunction Header({ yesterdaySolution }) {\n  return (\n    <>\n      <header className=\"site-header\">\n        <div className=\"header-wrapper\">\n          <div className=\"title\">Anigrams</div>\n          <div className=\"flex-container\">\n            <button className=\"link-button\" onClick={() => openModal('rulesModal')}>Rules</button>\n            <button className=\"link-button\" onClick={() => openModal('yesterdayModal')}>Yesterday</button>\n            <button className=\"link-button\" onClick={() => openModal('patreonModal')}>Patreon</button>\n          </div>\n        </div>\n      </header>\n      <div id=\"yesterdayModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" onClick={() => closeModal('yesterdayModal')}>&times;</span>\n          <div id=\"yesterdayContent\">\n            {yesterdaySolution.map(\n              (solutionRow, i) =>\n                <div key={solutionRow.toString()} className=\"solution-row no-justify\">\n                  {solutionRow[0].split(\"\").map(\n                    (letter, index) => <div key={index} className=\"solution-slot yesterday-slot\">{letter}</div>\n                  )}\n                  <div className=\"emojiDiv\">{emojiMapping[i]}</div>\n                </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div id=\"rulesModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" onClick={() => closeModal('rulesModal')}>&times;</span>\n          <div class=\"rules-title\">Rules</div>\n          <div class=\"about-content\">\n            <div>Unscramble a word to reveal the next letter.</div><br />\n            <div>Each word must use every available letter exactly once.</div><br />\n            <div>There may be multiple acceptable words at any given level, but you only need to enter one to advance.\n            </div><br />\n            <div>Feeling stuck? Use the \"Show next letter\" button for a hint... But use it wisely, as you only get 6\n              hints for the whole game!</div><br />\n            <div>A new Anigrams puzzle will post every day at 9:30pm EST, 6:30pm PST.</div>\n            <br /><br />\n            <div>Created by Adam Wagner</div><br />\n            <div>Developed by Rafael Musa</div><br />\n            <div>Gameplay development by Jacob Goldberg</div><br />\n            <div>Special thanks to Anna Goldberg Wagner</div><br />\n            <div>Think we missed a word? Want to share some feedback? Have other questions? Hit us up at <a\n              href=\"mailto:info@anigrams.us\">info@anigrams.us</a></div>\n          </div>\n        </div>\n      </div>\n      <div id=\"patreonModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" onClick={() => closeModal('patreonModal')}>&times;</span>\n          <div class=\"about-content\">\n            <div>Anigrams is on <a href=\"https://www.patreon.com/user?u=65757168\">Patreon</a>!</div>\n            <br />\n            <div>By joining the community, you'll get access to bonus Anigrams challenges, early looks at/input in potential new features, the opportunity to submit puzzles (with your name in the byline!), occasional Q&As with me, and (coming\n              next\n              week!) a full, playable backlog of previous Anigrams puzzles.</div>\n            <br />\n            <div>Most importantly, you'll enable me to continue to grow this game and develop new ones within the Anigrams family. I hope you'll consider joining!</div>\n            <br />\n            <div>-Adam</div>\n            <br />\n            <button class=\"button-84\" onClick={() => window.open('https://www.patreon.com/user?u=65757168', '_blank')}>Go to Patreon</button>\n          </div>\n        </div>\n      </div>\n      <div id=\"newFeatureModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" onClick={() => closeModal('newFeatureModal')}>&times;</span>\n          <div class=\"about-content\">\n            <div class=\"new-feature-title\">NEW: Unlimited hints</div>\n            <br />\n            <div>I want Anigrams to be challenging, but not discouraging. Starting today, I'm testing out the possibility of removing the 6-hint maximum and allowing unlimited uses of the \"Show Next Letter\" button, so that more solvers can get across the finish line.</div>\n            <br />\n            <div>I've also heard your feedback about how accidentally tapping the Show Next Letter button is frustrating, so that button is now a 'double tap.' The first time you tap, you'll be prompted \"Are you sure?\" and the second time you'll be shown the letter.</div>\n            <br />\n            <div>If you have thoughts about the changes, I'd love to hear them. Please reach out at info@anigrams.us. And if you'd like to have a say on future changes, please consider joining the Anigrams Patreon community.</div>\n            <br />\n            <div>Happy solving!</div>\n            <br />\n            <div>-Adam</div>\n            <br />\n            <span class=\"new-feature-start-button\"><button class=\"button-84\" onClick={() => closeModal('newFeatureModal')}>Start Puzzle</button></span>\n            <button class=\"button-84\" onClick={() => window.open('https://www.patreon.com/user?u=65757168', '_blank')}>Join Patreon</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const SolutionContext = React.createContext();\n","import React, { useContext } from 'react';\nimport './SolutionRow.css';\nimport './IncorrectFeedback.css';\nimport { emojiMapping, FEEDBACK_TYPE } from './constants';\nimport { SolutionContext } from './SolutionContext';\n\nconst feedbackMessages = [\n  \"Hoo-ray!\",\n  \"Neck-cellent!\",\n  \"TeEEEEErrific!\",\n  \"Caw-esome!\",\n  \"Gr-eight!\",\n  \"Maaa-arvelous\",\n]\n\nfunction SolutionRow({ length, round }) {\n  const { currentRound, currentWord, userSolution, showFeedback, isFeedbackVisible } = useContext(SolutionContext);\n  const isCurrentRound = round === currentRound;\n  const slots = [];\n  let wordToShow = '';\n  if (round < currentRound) {\n    wordToShow = userSolution[round];\n  } else if (isCurrentRound) {\n    wordToShow = currentWord.padEnd(length);\n  } else {\n    wordToShow = ''.padEnd(length);\n  }\n\n  for (let i = 0; i < length; i++) {\n    slots.push(\n      <div key={i} className={`solution-slot${isCurrentRound && currentWord.length === i ? ' active-solution-slot' : ''}`}>\n        {wordToShow[i]}\n      </div>\n    );\n  }\n\n  const shouldShowFeedback = isFeedbackVisible && ((showFeedback === FEEDBACK_TYPE.INCORRECT && isCurrentRound) || (showFeedback === FEEDBACK_TYPE.CORRECT && round === currentRound - 1));\n  return (\n    <div className=\"solution-row\">\n      <div className=\"solution-slot-container\">\n        {slots}\n      </div>\n      <div className={length === 9 ? \"goat-tile-container\" : ''}>\n        <div className={`emojiDiv${length === 9 ? ' goat-tile' : ''}`}>\n          {emojiMapping[round]}\n          <div id={length === 9 ? \"goat-row-feedback\" : undefined} className=\"feedbackContainer\">\n            <div className={`incorrectFeedback${shouldShowFeedback ? ' showIncorrectFeedback' : ''}`}>\n              {showFeedback === FEEDBACK_TYPE.CORRECT ? feedbackMessages[currentRound] : \"Incorrect word\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SolutionRow;\n","import React, { useContext } from 'react';\nimport SolutionRow from './SolutionRow';\nimport { SolutionContext } from './SolutionContext';\n\nfunction SolutionArea() {\n  const { solution } = useContext(SolutionContext);\n  return (\n    <div>\n      {solution.map(\n        (solutionArray, index) =>\n          <SolutionRow\n            key={solutionArray[0]}\n            length={solutionArray[0].length}\n            round={index}\n          />\n      )}\n    </div>\n  );\n}\n\nexport default SolutionArea;\n","import React, { useContext } from 'react';\nimport { emojiMapping } from './constants'\nimport './TileArea.css';\nimport { SolutionContext } from './SolutionContext';\n\nfunction isUpperCase(char) {\n  return char === char.toUpperCase();\n}\n\n\nfunction TileArea() {\n  const {\n    tileOrder,\n    onClickTile,\n    actionsDisabled,\n  } = useContext(SolutionContext);\n  const tiles = [];\n  for (var i = 0; i < tileOrder.length; i++) {\n    tiles.push(<div key={i} onClick={actionsDisabled ? null : onClickTile} onMouseDown={actionsDisabled ? null : onClickTile} onTouchStart={actionsDisabled ? null : onClickTile} className={`tile${isUpperCase(tileOrder[i]) ? ' used-tile' : ''}`}>{isUpperCase(tileOrder[i]) ? '' : tileOrder[i]}</div>);\n  }\n  for (let j = tileOrder.length; j < 9; j++) {\n    tiles.push(\n      <div key={j} className=\"tile flip-container emoji-tile\">\n        <div className=\"flipper\">\n          <div className=\"front\">\n            {emojiMapping[j - 4]}\n          </div>\n          <div className=\"back\">\n            X\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <div id=\"tileArea\">{tiles}</div>;\n}\n\nexport default TileArea;\n","import React, { useContext, useState } from 'react';\nimport './ActionButtons.css';\nimport './Button.css';\nimport { SolutionContext } from './SolutionContext';\n\nfunction ActionButtons() {\n  const { shuffle, actionsDisabled, tileOrder, setTileOrder, solution, currentRound, setCurrentWord, currentLevelHints, setCurrentLevelHints, clear, goBack, totalHintsUsed, setTotalHintsUsed, puzzleIndex } = useContext(SolutionContext);\n  const [hintClicked, setHintClicked] = useState(false);\n\n\n  const onClickHint = () => {\n    setHintClicked(true);\n    setTimeout(() => setHintClicked(false), 3000);\n  }\n\n  const showNextLetter = (puzzleIndex) => {\n    setHintClicked(false);\n    const newWord = solution[currentRound][0].slice(0, currentLevelHints + 1);\n    localStorage.setItem('currentDay', puzzleIndex + 1);\n    setCurrentLevelHints(currentLevelHints + 1);\n    setTotalHintsUsed(totalHintsUsed + 1);\n    const newOrder = tileOrder.map((v) => v.toLowerCase());\n    newWord.split('').forEach((v) => {\n      const index = newOrder.indexOf(v.toLowerCase());\n      newOrder[index] = newOrder[index].toUpperCase();\n    })\n    setTileOrder(newOrder);\n    setCurrentWord(newWord);\n  }\n\n  const shouldDisable = actionsDisabled || currentRound === 6;\n\n  return (\n    <>\n      <div className=\"button-menu\">\n        <button disabled={shouldDisable} id=\"clearButton\" className=\"button-84\" onClick={clear}>Clear</button>\n        <button disabled={shouldDisable} className=\"emoji-button\" onClick={shuffle}>🔄</button>\n        <button disabled={shouldDisable} id=\"deleteButton\" className=\"button-84\" onClick={goBack}>Delete</button>\n      </div>\n      <div className=\"button-menu\">\n        {hintClicked\n          ? <button disabled={shouldDisable} id=\"confirmButton\" className=\"button-84 show-next-button\" onClick={() => showNextLetter(puzzleIndex)}>Are you sure?</button>\n          : <button disabled={shouldDisable} id=\"hintButton\" className=\"button-84 show-next-button\" onClick={onClickHint}>Show next letter</button>}\n      </div>\n      <div class=\"hints-used\">{`Hints used: ${totalHintsUsed}`}</div>\n    </>\n  );\n};\n\nexport default ActionButtons;\n","import React, { useContext, useState } from 'react';\nimport { closeModal } from './utils';\nimport './CongratsModal.css';\nimport { SolutionContext } from './SolutionContext';\n\nfunction CongratsModal() {\n  const { puzzleIndex } = useContext(SolutionContext);\n  const [shareClicked, setShareClicked] = useState(false);\n  const timeShareText = localStorage.getItem('shareHints') > 0 ? localStorage.getItem('shareTime') : `⭐${localStorage.getItem('shareTime')}⭐`;\n  const textToShare = `🦉🦒🐬🦜🐙🐐\\r\\nAnigrams ${puzzleIndex + 1}\\r\\n${timeShareText}\\r\\nHints used: ${localStorage.getItem('shareHints') || 0}\\r\\nStreak: ${localStorage.getItem('streak')}\\r\\n🦉🦒🐬🦜🐙🐐\\r\\nanigrams.us`;\n\n  const onClickShare = () => {\n    console.log('he')\n    if (navigator.share) {\n      navigator.share({\n        text: textToShare,\n      });\n    } else {\n      console.log('yooo')\n      navigator.clipboard.writeText(textToShare)\n      setShareClicked(true);\n      setTimeout(() => setShareClicked(false), 1000);\n    }\n  }\n\n  return (\n    <div id=\"congratsModal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={() => { document.querySelector('.goat-tile').remove(); closeModal('congratsModal'); }}>&times;</span>\n        <div className=\"column-flex\">\n          <div className=\"goat\">🐐</div>\n          <div className=\"goat-text\">You are the G.O.A.T. !!!</div>\n        </div>\n        <div id=\"shareableContent\">\n          <div className=\"share-content-row\">\n            <div>🐐</div>\n            <div>🦉</div>\n            <div>🦒</div>\n            <div>🐬</div>\n            <div>🦜</div>\n            <div>🐙</div>\n            <div>🐐</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🐙</div>\n            <div>Anigrams</div>\n            <div>🦉</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🦜</div>\n            <div id=\"shareNumber\">{puzzleIndex + 1}</div>\n            <div>🦒</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🐬</div>\n            <div id=\"shareTime\">{localStorage.getItem('shareTime')}</div>\n            <div>🐬</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🦒</div>\n            <div id=\"shareHints\">{`Hints: ${localStorage.getItem('shareHints') || 0}`}</div>\n            <div>🦜</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🦉</div>\n            <div id=\"shareStreak\">{`Streak: ${localStorage.getItem('streak') || 0}`}</div>\n            <div>🐙</div>\n          </div>\n          <div className=\"share-content-row\">\n            <div>🐐</div>\n            <div>🐙</div>\n            <div>🦜</div>\n            <div>🐬</div>\n            <div>🦒</div>\n            <div>🦉</div>\n            <div>🐐</div>\n          </div>\n        </div>\n        <div className=\"goat-modal-info-container\">\n          <div>\n            <div>Next Anigram:</div>\n            <div id=\"nextAnigram\">XX</div>\n          </div>\n          <button id=\"shareButton\" className=\"button-84\" role=\"button\" onClick={onClickShare}>{shareClicked ? \"Copied to clipboard\" : \"Share\"}</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CongratsModal;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport SolutionArea from './SolutionArea';\nimport TileArea from './TileArea';\nimport ActionButtons from './ActionButtons';\nimport { SolutionContext } from './SolutionContext';\nimport { FEEDBACK_TYPE, SOLUTIONS } from './constants';\nimport { processSolution, openModal, startTimeCounter, checkTime } from './utils';\nimport CongratsModal from './CongratsModal';\n// import { useIsMount } from './useIsMount';\n\nfunction App() {\n  // assuming start at 2022/08/21, 18:30:00, PDT, also ignore daylight savings, www.unixtimestamp.com\n  // use 1661131800000 when in daylight savings\n  // use 1661135400000 when in standard time\n  var puzzleIndex = Math.floor((Date.now() - 1661131800000) / (1000 * 60 * 60 * 24));\n  const solution = useMemo(() => processSolution(SOLUTIONS.split(\"\\n\")[puzzleIndex]), [puzzleIndex]);\n  const yesterdaySolution = useMemo(() => processSolution(SOLUTIONS.split(\"\\n\")[puzzleIndex - 1]), [puzzleIndex]);\n\n  const haveSavedData = Number(localStorage.getItem('currentDay')) === puzzleIndex + 1;\n  const currentSolution = (localStorage.getItem('currentSolution') || '').split('|').filter(n => n);\n  const storedHints = Number(localStorage.getItem('currLevelHints'));\n\n  const prevTime = useMemo(() => haveSavedData ? Number(localStorage.getItem('currentTime')) || 0 : 0, []);\n  const startTime = useMemo(() => Math.floor(Date.now() / 1000), []);\n\n  const [tileOrder, setTileOrder] = useState(haveSavedData ? (solution[Math.min(currentSolution.length, 5)][0].slice(0, storedHints).toUpperCase() + solution[Math.min(currentSolution.length, 5)][0].slice(storedHints)).split('') : solution[0][0].split(''));\n  const [currentWord, setCurrentWord] = useState(haveSavedData ? solution[Math.min(currentSolution.length, 5)][0].slice(0, storedHints) : '');\n  const [currentRound, setCurrentRound] = useState(haveSavedData ? currentSolution.length : 0);\n  const [userSolution, setUserSolution] = useState(haveSavedData ? currentSolution : []);\n  const [currentLevelHints, setCurrentLevelHints] = useState(haveSavedData ? storedHints : 0);\n  const [totalHintsUsed, setTotalHintsUsed] = useState(haveSavedData ? Number(localStorage.getItem('shareHints')) : 0);\n  const [isFeedbackVisible, setIsFeedbackVisible] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(FEEDBACK_TYPE.NONE);\n  const [actionsDisabled, setActionsDisabled] = useState(false);\n  localStorage.setItem('currLevelHints', currentLevelHints);\n  localStorage.setItem('shareHints', totalHintsUsed);\n  localStorage.setItem('currentSolution', userSolution.join('|'));\n\n  // const isMount = useIsMount();\n\n  // console.log(tileOrder);\n\n  // useEffect(() => {\n  //   if (!isMount) {\n  //     localStorage.setItem('currLevelHints', currentLevelHints);\n  //     localStorage.setItem('currentSolution', userSolution.join('|'));\n  //   }\n  // }, [currentLevelHints, userSolution])\n\n  useEffect(() => {\n    // we have saved data for today's puzzle\n    if (Number(localStorage.getItem('currentDay')) !== puzzleIndex + 1) {\n      // here we have some partial solution for another day and can clear\n      localStorage.setItem('currentSolution', \"\");\n      localStorage.setItem('currentTime', \"\");\n      localStorage.setItem('currLevelHints', 0);\n    }\n    if (haveSavedData && currentSolution.length === 6) {\n      openModal('congratsModal');\n    }\n    shuffle();\n    startTimeCounter(startTime, prevTime, puzzleIndex)\n    openModal('newFeatureModal')\n  }, []);\n\n  const findNewLetter = useCallback((round) => {\n    const oldLetters = solution[round - 1][0].split('').sort().join('');\n    const newLetters = solution[round][0].split('').sort().join('');\n    for (var i = 0; i < oldLetters.length; i++) {\n      if (oldLetters[i] !== newLetters[i]) {\n        return newLetters[i];\n      }\n    }\n    return newLetters[newLetters.length - 1];\n  }, [solution]);\n\n  const clear = useCallback((_, levelSuccess = false) => {\n    const hintWord = levelSuccess ? '' : solution[currentRound][0].slice(0, currentLevelHints);\n    setCurrentWord(hintWord);\n    const newOrder = tileOrder.map((v) => v.toLowerCase());\n    hintWord.split('').forEach((v) => {\n      const index = newOrder.indexOf(v.toLowerCase());\n      newOrder[index] = newOrder[index].toUpperCase();\n    })\n    setTileOrder(newOrder);\n  }, [solution, currentRound, currentLevelHints, setCurrentWord, tileOrder, setTileOrder]);\n\n  const goBack = useCallback(() => {\n    if (currentWord.length > currentLevelHints) {\n      const lastLetter = currentWord[currentWord.length - 1];\n      setCurrentWord(currentWord.slice(0, -1));\n      tileOrder[tileOrder.indexOf(lastLetter.toUpperCase())] = lastLetter.toLowerCase();\n      setTileOrder(tileOrder);\n    }\n  }, [currentWord, setCurrentWord, currentLevelHints, tileOrder, setTileOrder]);\n\n  const onClickTile = useCallback((ev) => {\n    if (currentRound === 6) return;\n    const letter = ev.target.innerText;\n    const index = [...ev.target.parentNode.children].indexOf(ev.target)\n    tileOrder[index] = tileOrder[index].toUpperCase();\n    setTileOrder(tileOrder);\n    setCurrentWord(prev => prev + letter);\n  }, [currentWord, setCurrentWord, tileOrder, setTileOrder]);\n\n  const shuffle = useCallback(() => {\n    while (true) {\n      const newOrder = tileOrder.sort(() => Math.random() - 0.5);\n      if (!solution.flat().includes(newOrder.join(''))) {\n        setTileOrder([...newOrder]);\n        break;\n      }\n    }\n  }, [tileOrder, setTileOrder]);\n\n  const onKeyDown = useCallback((e) => {\n    if (!e.repeat) {\n      if (e.key === 'Backspace') {\n        document.getElementById('deleteButton').click();\n        return;\n      }\n      const index = tileOrder.indexOf(e.key.toLowerCase());\n      if (index !== -1) {\n        document.querySelector(`#tileArea :nth-child(${index + 1})`).click();\n      }\n    }\n  }, [goBack, tileOrder]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [onKeyDown])\n\n  useEffect(() => {\n    if (currentWord.length === currentRound + 4) {\n      if (solution.flat().includes(currentWord.toLowerCase()) && currentWord.length === currentRound + 4) {\n        localStorage.setItem('currentDay', puzzleIndex + 1);\n        // correct word\n        setCurrentLevelHints(0);\n        setActionsDisabled(true);\n        setCurrentRound(currentRound + 1);\n        if (currentRound + 1 !== solution.length) {\n          var tileToFlip = document.querySelector('.emoji-tile')\n          const newLetter = findNewLetter(currentRound + 1);\n          tileToFlip.firstChild.children[1].innerText = newLetter;\n          tileToFlip.firstChild.classList.add(\"flip\");\n          setTimeout(() => {\n            const newOrder = tileOrder.map((v) => v.toLowerCase());\n            newOrder.push(newLetter.toLowerCase());\n            setTileOrder(newOrder)\n            setActionsDisabled(false)\n          }, 700);\n        }\n        setIsFeedbackVisible(true);\n        setShowFeedback(FEEDBACK_TYPE.CORRECT);\n        setUserSolution(prev => [...prev, currentWord.toLowerCase()])\n        setCurrentWord('');\n        clear(null, true);\n        setTimeout(() => {\n          setIsFeedbackVisible(false);\n        }, 500);\n        // solved last round\n        if (currentRound + 1 === solution.length) {\n          // solved yesterday\n          if (Number(localStorage.getItem('lastSolved')) === puzzleIndex) {\n            localStorage.setItem('streak', (Number(localStorage.getItem('streak')) || 0) + 1)\n          } else {\n            localStorage.setItem('streak', 1)\n          }\n          localStorage.setItem('lastSolved', puzzleIndex + 1)\n          var now = Math.floor(Date.now() / 1000);\n          var diff = now - startTime + prevTime;\n          var totalMinutes = Math.floor(diff / 60);\n          var h = Math.floor(totalMinutes / 60);\n          var m = Math.floor(totalMinutes % 60);\n          var s = Math.floor(diff % 60);\n          h = checkTime(h)\n          m = checkTime(m);\n          s = checkTime(s);\n          localStorage.setItem('shareTime', `${h}:${m}:${s}`)\n          document.getElementById('goat-row-feedback').remove();\n          document.querySelector('.goat-tile').classList.add('goat-tile-grow');\n          setTimeout(() => openModal('congratsModal'), 1200);\n        }\n      } else {\n        // incorrect word\n        setIsFeedbackVisible(true)\n        setShowFeedback(FEEDBACK_TYPE.INCORRECT);\n        setTimeout(() => {\n          clear();\n          setIsFeedbackVisible(false);\n        }, 500);\n      }\n    }\n  }, [currentWord, currentRound, solution, setShowFeedback, tileOrder, setTileOrder, clear, setCurrentLevelHints, setCurrentWord]);\n\n  return (\n    <SolutionContext.Provider value={{\n      tileOrder, setTileOrder, solution,\n      currentWord, setCurrentWord, currentRound,\n      setCurrentRound, shuffle, puzzleIndex,\n      userSolution, setUserSolution, actionsDisabled,\n      totalHintsUsed, setTotalHintsUsed,\n      showFeedback, setShowFeedback, isFeedbackVisible,\n      currentLevelHints, setCurrentLevelHints, clear, goBack, onClickTile\n    }}>\n      <Header yesterdaySolution={yesterdaySolution} />\n      <div className=\"wrapper\">\n        <div className=\"intro-info\">\n          <div>Unscramble a word to reveal the next letter</div>\n          <div>Level</div>\n        </div>\n        <SolutionArea />\n        <TileArea />\n        <ActionButtons />\n      </div>\n      <CongratsModal />\n    </SolutionContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}